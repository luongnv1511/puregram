import { readFile, writeFile } from 'node:fs/promises'

import { UpdateType } from '../../packages/puregram/src'

const UDPATES_PATH = `${__dirname}/../../packages/puregram/src/updates.ts`

const getContext = (key: string, value: string) => (
  ['edited_message', 'channel_post', 'edited_channel_post'].includes(value)
    ? 'MessageContext'
    : value === 'my_chat_member'
      ? 'ChatMemberContext'
      : `${key}Context`
)

const main = async () => {
  let updatesTsContent = await readFile(UDPATES_PATH, 'utf8')

  // INFO: generate-updates-on
  {
    let clauses: string[] = []

    clauses.push('/** Subscribes to specific event(s) and sets up a handler for it(them) */')

    // on<T = {}>(events: UpdateType.VideoChatEnded | 'video_chat_ended', handlers: AllowArray<Middleware<Contexts.VideoChatEndedContext & T>>): this
    for (const [key, value] of Object.entries(UpdateType)) {
      clauses.push(`on<T = {}>(events: UpdateType.${key} | '${value}', handlers: AllowArray<Middleware<Contexts.${getContext(key, value)} & T>>): this`)
    }

    clauses.push('on<T = {}>(events: AllowArray<string>, handlers: AllowArray<Middleware<Contexts.Context & T>>): this')

    const UpdatesInterface = `export interface Updates {\n${clauses.map(clause => `  ${clause}`).join('\n')}\n}`
    const content = `// @autogenerated generate-updates-on start\n${UpdatesInterface}\n// @autogenerated generate-updates-on end`

    updatesTsContent = updatesTsContent.replace(/\/\/\s@autogenerated\sgenerate-updates-on\sstart\n(.*?)\n\/\/\s@autogenerated\sgenerate-updates-on\send/is, content)

    console.log(`[generate-updates-on] successfully generated ${clauses.length - 1} on() clauses`)
  }

  // INFO: generate-updates-raw-events
  {
    let clauses: string[] = []

    // ['message', Contexts.MessageContext],
    for (const [key, value] of Object.entries(UpdateType)) {
      clauses.push(`['${value}', Contexts.${getContext(key, value)}],`)
    }

    const RawEvents = `const rawEvents: [UpdateName, Constructor<any>][] = [\n${clauses.map(clause => `  ${clause}`).join('\n').slice(0, -1)}\n]`
    const content = `// @autogenerated generate-updates-raw-events start\n${RawEvents}\n// @autogenerated generate-updates-raw-events end`

    updatesTsContent = updatesTsContent.replace(/\/\/\s@autogenerated\sgenerate-updates-raw-events\sstart\n(.*)\n\/\/\s@autogenerated\sgenerate-updates-raw-events\send/is, content)

    console.log(`[generate-updates-raw-events] successfully generated ${clauses.length - 1} on() clauses`)
  }

  await writeFile(UDPATES_PATH, updatesTsContent)
}

main().catch(console.error)
