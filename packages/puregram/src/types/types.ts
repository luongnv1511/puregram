import { TelegramUpdate, ApiMethods } from '../generated'

import * as Contexts from '../contexts'

export type MaybeArray<T> = T | T[]

export type CustomEventName = 'service_message'
export type MessageEventName = 'new_chat_members' | 'left_chat_member' | 'new_chat_title' | 'new_chat_photo' | 'delete_chat_photo' | 'group_chat_created' | 'supergroup_chat_created' | 'channel_chat_created' | 'migrate_to_chat_id' | 'migrate_from_chat_id' | 'pinned_message' | 'invoice' | 'successful_payment' | 'location' | 'message_auto_delete_timer_changed' | 'video_chat_scheduled' | 'video_chat_started' | 'video_chat_ended' | 'video_chat_participants_invited' | 'web_app_data' | 'chat_join_request' | 'proximity_alert_triggered' | 'passport_data'
export type UpdateName = Exclude<keyof Known<TelegramUpdate>, 'update_id'> | MessageEventName | CustomEventName
export type AttachmentType = 'animation' | 'audio' | 'document' | 'photo' | 'sticker' | 'video' | 'video_note' | 'voice' | 'contact' | 'poll' | 'venue' | 'location'
export type MediaAttachmentType = AttachmentType | 'media' | 'png_sticker' | 'tgs_sticker' | 'thumb'
export type Constructor<T = {}> = new (...args: any[]) => T
export type ApiMethod = keyof Known<ApiMethods>

/** Removes `[key: string]: any;` from interface */
export type Known<T> = {
  [K in keyof T as (string extends K ? never : number extends K ? never : K)]: T[K]
}

/** Might be used to reveal actual object's type */
export type Id<T> = T extends infer O
  ? { [K in keyof O]: O[K] }
  : never

export type Optional<T, K extends keyof Known<T>> =
  /** We pick every field but `K` and leave them as is */
  & Pick<Known<T>, Exclude<keyof Known<T>, K>>
  /** Then, we take our `K` fields and mark them as optional */
  & { [P in K]?: Known<T>[P] }
  /** Lastly, we add `[key: string]: any;` */
  & { [key: string]: any }

// https://github.com/grammyjs/grammY/blob/b8ac3d65bad6ed6a63a82c8bd8c642406c95532c/src/composer.ts#L8
/** Permits `string` but gives hints */
export type SoftString<S extends string> = (string & {}) | S

// @autogenerated generate-types-contexts-interface start
export interface ContextsCollection {
  callback_query: Contexts.CallbackQueryContext
  channel_chat_created: Contexts.ChannelChatCreatedContext
  chosen_inline_result: Contexts.ChosenInlineResultContext
  delete_chat_photo: Contexts.DeleteChatPhotoContext
  group_chat_created: Contexts.GroupChatCreatedContext
  inline_query: Contexts.InlineQueryContext
  invoice: Contexts.InvoiceContext
  left_chat_member: Contexts.LeftChatMemberContext
  message: Contexts.MessageContext
  edited_message: Contexts.MessageContext
  channel_post: Contexts.MessageContext
  edited_channel_post: Contexts.MessageContext
  migrate_to_chat_id: Contexts.MigrateToChatIdContext
  migrate_from_chat_id: Contexts.MigrateFromChatIdContext
  new_chat_members: Contexts.NewChatMembersContext
  new_chat_photo: Contexts.NewChatPhotoContext
  new_chat_title: Contexts.NewChatTitleContext
  pinned_message: Contexts.PinnedMessageContext
  poll: Contexts.PollContext
  poll_answer: Contexts.PollAnswerContext
  chat_member: Contexts.ChatMemberContext
  my_chat_member: Contexts.ChatMemberContext
  pre_checkout_query: Contexts.PreCheckoutQueryContext
  shipping_query: Contexts.ShippingQueryContext
  successful_payment: Contexts.SuccessfulPaymentContext
  supergroup_chat_created: Contexts.SupergroupChatCreatedContext
  message_auto_delete_timer_changed: Contexts.MessageAutoDeleteTimerChangedContext
  video_chat_scheduled: Contexts.VideoChatScheduledContext
  video_chat_started: Contexts.VideoChatStartedContext
  video_chat_ended: Contexts.VideoChatEndedContext
  video_chat_participants_invited: Contexts.VideoChatParticipantsInvitedContext
  web_app_data: Contexts.WebAppDataContext
  chat_join_request: Contexts.ChatJoinRequestContext
  proximity_alert_triggered: Contexts.ProximityAlertTriggeredContext
  passport_data: Contexts.PassportDataContext
  service_message: Contexts.MessageContext

  [key: string]: Contexts.Context
}
// @autogenerated generate-types-contexts-interface end
